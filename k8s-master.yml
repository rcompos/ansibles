---
# Kubernetes on CentOS
# Master Configuration
# https://kubernetes.io/docs/getting-started-guides/centos/centos_manual_config/

- hosts: zero
  vars:
    etc_etcd_etcd_conf: /etc/etcd/etcd.conf
    etc_kubernetes_apiserver: /etc/kubernetes/apiserver
    etc_sysconfig_flanneld: /etc/sysconfig/flanneld
  #remote_user: root

  tasks:

  - name: Role Facts
    set_fact:
      block_device: '/dev/sdb'
      kube_master: 'zero'
      service_cluster_ip_range: '10.254.0.0/16'
      flannel_network: '172.30.0.0/16'
      flannel_etcd_prefix: '/kube-centos/network'
      script_dir: '/root'

  - name: Get SELinux state
    shell: getenforce
    register: result
  
  - debug: msg="System reboot required to disable SELinux.  SELinux{{":"}} {{result.stdout}}"
    when: result.stdout != "Disabled"
  
  - name: SELinux Permissive
    selinux:
      state: disabled
    register: selinux_result

  - name: Edit /etc/etcd/etcd.conf
    lineinfile:
      path: /etc/etcd/etcd.conf
      regexp: '^ETCD_NAME='
      line: 'ETCD_NAME=default'
    #notify: Restart Docker

  - name: Edit /etc/etcd/etcd.conf
    lineinfile:
      path: /etc/etcd/etcd.conf
      regexp: '^ETCD_DATA_DIR='
      line: 'ETCD_DATA_DIR="/var/lib/etcd/default.etcd"'
    #notify: Restart Docker

  - name: Edit /etc/etcd/etcd.conf
    lineinfile:
      path: /etc/etcd/etcd.conf
      regexp: '^ETCD_LISTEN_CLIENT_URLS='
      line: 'ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:2379"'
    #notify: Restart Docker

  - name: Edit /etc/etcd/etcd.conf
    lineinfile:
      path: /etc/etcd/etcd.conf
      regexp: '^ETCD_ADVERTISE_CLIENT_URLS='
      line: 'ETCD_ADVERTISE_CLIENT_URLS="http://0.0.0.0:2379"'
    #notify: Restart Docker

  - name: Slurp File "{{ etc_etcd_etcd_conf }}"
    slurp:
      src: "{{ etc_etcd_etcd_conf }}"
    register: slurpfile

  - name: Print File "{{ etc_etcd_etcd_conf }}"
    debug: msg="{{ (slurpfile['content']|b64decode).split('\n') }}"

  - name: Edit /etc/kubernetes/apiserver
    lineinfile:
      path: /etc/kubernetes/apiserver
      regexp: '^KUBE_API_ADDRESS='
      line: 'KUBE_API_ADDRESS="--address=0.0.0.0"'
    #notify: Restart Docker

  - name: Edit /etc/kubernetes/apiserver
    lineinfile:
      path: /etc/kubernetes/apiserver
      regexp: '^KUBE_API_PORT='
      line: 'KUBE_API_PORT="--port=8080"'
    #notify: Restart Docker

  - name: Edit /etc/kubernetes/apiserver
    lineinfile:
      path: /etc/kubernetes/apiserver
      regexp: '^KUBELET_PORT='
      line: 'KUBELET_PORT="--kubelet-port=10250"'
    #notify: Restart Docker

  - name: Edit /etc/kubernetes/apiserver
    lineinfile:
      path: /etc/kubernetes/apiserver
      regexp: '^KUBE_ETCD_SERVERS='
      line: 'KUBE_ETCD_SERVERS="--etcd-servers=http://{{ kube_master }}:2379"' 
    #notify: Restart Docker

  - name: Edit /etc/kubernetes/apiserver
    lineinfile:
      path: /etc/kubernetes/apiserver
      regexp: '^KUBE_SERVICE_ADDRESSES='
      line: 'KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range={{ service_cluster_ip_range }}"'
    #notify: Restart Docker

  - name: Edit /etc/kubernetes/apiserver
    lineinfile:
      path: /etc/kubernetes/apiserver
      regexp: '^KUBE_API_ARGS=' 
      line: 'KUBE_API_ARGS=""'
    #notify: Restart Docker

  - name: Slurp File "{{ etc_kubernetes_apiserver }}"
    slurp:
      src: "{{ etc_kubernetes_apiserver }}"
    register: slurpfile

  - name: Print File "{{ etc_kubernetes_apiserver }}"
    debug: msg="{{ (slurpfile['content']|b64decode).split('\n') }}"

  - name: Configure network overlay
    shell: |
      systemctl start etcd
      etcdctl mkdir /kube-centos/network
      etcdctl mk /kube-centos/network/config "{ \"Network\": \"{{ flannel_network }}\", \"SubnetLen\": 24, \"Backend\": { \"Type\": \"vxlan\" } }" 
    become: true
    ignore_errors: true

  - name: Edit /etc/sysconfig/flanneld
    lineinfile:
      path: /etc/sysconfig/flanneld
      regexp: '^FLANNEL_ETCD_ENDPOINTS='
      line: "FLANNEL_ETCD_ENDPOINTS=\"http://{{ kube_master }}:2379\""
    #notify: Restart Docker

  - name: Edit /etc/sysconfig/flanneld
    lineinfile:
      path: /etc/sysconfig/flanneld
      regexp: '^FLANNEL_ETCD_PREFIX='
      line: "FLANNEL_ETCD_PREFIX=\"{{ flannel_etcd_prefix }}\""
    #notify: Restart Docker

  - name: Edit /etc/sysconfig/flanneld
    lineinfile:
      path: /etc/sysconfig/flanneld
      regexp: '^FLANNEL_OPTIONS='
      line: "FLANNEL_OPTIONS=\"\""
    #notify: Restart Docker

  - name: Slurp File "{{ etc_sysconfig_flanneld }}"
    slurp:
      src: "{{ etc_sysconfig_flanneld }}"
    register: slurpfile

  - name: Print File "{{ etc_sysconfig_flanneld }}"
    debug: msg="{{ (slurpfile['content']|b64decode).split('\n') }}"

  - name: Copy k8s-master-start.sh
    copy:
      src: k8s-master-start.sh
      dest: "{{ script_dir }}/k8s-master-start.sh"
      owner: root
      group: root
      mode: 0755

  - name: Copy k8s-master-stop.sh
    copy:
      src: k8s-master-stop.sh
      dest: "{{ script_dir }}/k8s-master-stop.sh"
      owner: root
      group: root
      mode: 0755

  - name: Start Services
    shell: "{{ script_dir }}/k8s-master-start.sh"
    become: true
