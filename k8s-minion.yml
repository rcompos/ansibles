---
# Kubernetes on CentOS
# Minion Configuration 
# https://kubernetes.io/docs/getting-started-guides/centos/centos_manual_config/

- hosts: kube0,kube1,kube2,kube3
  vars:
    etc_kubernetes_kubelet: /etc/kubernetes/kubelet
    etc_sysconfig_flanneld: /etc/sysconfig/flanneld
  #remote_user: root

  tasks:

  - name: Role Facts
    set_fact:
      block_device: '/dev/sdb'
      kube_master: 'zero'
      service_cluster_ip_range: '10.254.0.0/16'
      flannel_network: '172.30.0.0/16'
      flannel_etcd_prefix: '/kube-centos/network'
      script_dir: '/root'

  - name: Get SELinux state
    shell: getenforce
    register: result
  
  - debug: msg="System reboot required to disable SELinux.  SELinux{{":"}} {{result.stdout}}"
    when: result.stdout != "Disabled"
  
  - name: SELinux Permissive
    selinux:
      state: disabled
    register: selinux_result

  - name: Edit "{{ etc_kubernetes_kubelet }}"
    lineinfile:
      path: "{{ etc_kubernetes_kubelet }}"
      regexp: '^KUBELET_ADDRESS='
      line: 'KUBELET_ADDRESS="--address=0.0.0.0"'
    #notify: Restart Docker

  - name: Edit "{{ etc_kubernetes_kubelet }}"
    lineinfile:
      path: "{{ etc_kubernetes_kubelet }}"
      regexp: '^KUBELET_PORT='
      line: 'KUBELET_PORT="--port=10250"'
    #notify: Restart Docker

  - name: Edit "{{ etc_kubernetes_kubelet }}"
    lineinfile:
      path: "{{ etc_kubernetes_kubelet }}"
      regexp: '^KUBELET_HOSTNAME='
      line: "KUBELET_HOSTNAME=\"--hostname-override={{ ansible_hostname }}\""
    #notify: Restart Docker

  - name: Edit "{{ etc_kubernetes_kubelet }}"
    lineinfile:
      path: "{{ etc_kubernetes_kubelet }}"
      regexp: '^KUBELET_API_SERVER='
      line: "KUBELET_API_SERVER=\"--api-servers=http://{{ kube_master }}:8080\""
    #notify: Restart Docker

  - name: Edit "{{ etc_kubernetes_kubelet }}"
    lineinfile:
      path: "{{ etc_kubernetes_kubelet }}"
      regexp: '^KUBELET_ARGS' 
      line: "KUBELET_ARGS=\"\""
    #notify: Restart Docker

  - name: Slurp File "{{ etc_kubernetes_kubelet }}"
    slurp:
      src: "{{ etc_kubernetes_kubelet }}"
    register: slurpfile

  - name: Print File "{{ etc_kubernetes_kubelet }}"
    debug: msg="{{ (slurpfile['content']|b64decode).split('\n') }}"

  - name: Edit /etc/sysconfig/flanneld
    lineinfile:
      path:  /etc/sysconfig/flanneld
      regexp: '^FLANNEL_ETCD_ENDPOINTS='
      line: "FLANNEL_ETCD_ENDPOINTS=\"http://{{ kube_master }}:2379\"" 
    #notify: Restart Docker

  - name: Edit /etc/sysconfig/flanneld
    lineinfile:
      path:  /etc/sysconfig/flanneld
      regexp: '^FLANNEL_ETCD_PREFIX='
      line: "FLANNEL_ETCD_PREFIX=\"{{ flannel_etcd_prefix }}\"" 
    #notify: Restart Docker

  - name: Slurp File "{{ etc_sysconfig_flanneld }}"
    slurp:
      src: "{{ etc_sysconfig_flanneld }}"
    register: slurpfile

  - name: Print File "{{ etc_sysconfig_flanneld }}"
    debug: msg="{{ (slurpfile['content']|b64decode).split('\n') }}"

  - name: Copy k8s-minion-start.sh
    copy:
      src: k8s-minion-start.sh
      dest: "{{ script_dir }}/k8s-minion-start.sh"
      owner: root
      group: root
      mode: 0755

  - name: Copy k8s-minion-stop.sh
    copy:
      src: k8s-minion-stop.sh
      dest: "{{ script_dir }}/k8s-minion-stop.sh"
      owner: root
      group: root
      mode: 0755

  - name: Start Services
    shell: "{{ script_dir }}/k8s-minion-start.sh"
    become: true

  - name: Start Services
    shell: |
      kubectl config set-cluster default-cluster --server=http://"{{ kube_master }}":8080
      kubectl config set-context default-context --cluster=default-cluster --user=default-admin
      kubectl config use-context default-context 
    become: true


